// <auto-generated />
using System;
using EmployeeAttendanceManagement.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeAttendanceManagment.Migrations
{
    [DbContext(typeof(EmployeeManagementDbContext))]
    [Migration("20240720194752_AddLeaveEntity")]
    partial class AddLeaveEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeAttendanceManagement.Model.Leave", b =>
                {
                    b.Property<int>("LeaveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveID"));

                    b.Property<int>("CasualLeaves")
                        .HasColumnType("int");

                    b.Property<int>("ComboLeaves")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("PaidLeaves")
                        .HasColumnType("int");

                    b.Property<int>("SickLeaves")
                        .HasColumnType("int");

                    b.Property<int>("TakenCasualLeaves")
                        .HasColumnType("int");

                    b.Property<int>("TakenComboLeaves")
                        .HasColumnType("int");

                    b.Property<int>("TakenPaidLeaves")
                        .HasColumnType("int");

                    b.Property<int>("TakenSickLeaves")
                        .HasColumnType("int");

                    b.HasKey("LeaveID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.AttendancePolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PolicyDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttendancePolicies");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerEmployeeID")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerID")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID");

                    b.HasIndex("ManagerEmployeeID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AttendancePolicyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeographicalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("AttendancePolicyID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ManagerID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.HolidayCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HolidayCalendars");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.OrganizationChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ManagerID");

                    b.ToTable("OrganizationCharts");
                });

            modelBuilder.Entity("EmployeeAttendanceManagement.Model.Leave", b =>
                {
                    b.HasOne("EmployeeAttendanceManagment.Model.Employee", "Employee")
                        .WithMany("Leaves")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.Department", b =>
                {
                    b.HasOne("EmployeeAttendanceManagment.Model.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerEmployeeID");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.Employee", b =>
                {
                    b.HasOne("EmployeeAttendanceManagment.Model.AttendancePolicy", "AttendancePolicy")
                        .WithMany()
                        .HasForeignKey("AttendancePolicyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeAttendanceManagment.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeAttendanceManagment.Model.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AttendancePolicy");

                    b.Navigation("Department");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.OrganizationChart", b =>
                {
                    b.HasOne("EmployeeAttendanceManagment.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeAttendanceManagment.Model.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EmployeeAttendanceManagment.Model.Employee", b =>
                {
                    b.Navigation("Leaves");
                });
#pragma warning restore 612, 618
        }
    }
}
